@model WeatherViewModel
@{
    double rotation = 270;
    string weatherIcon = "~/images/unkown.png";
    string weatherBackground = "#C9C9C9";
    ViewData["Title"] = "Weather Page";

    Dictionary<string, string> Weather = new Dictionary<string, string>()
{
{"NA", "Not available"},
{"-1", "Trace rain"},
{"0", "Clear"},
{"1", "Sunny"},
{"2", "Partly cloudy"},
{"3", "Partly cloudy"},
{"5", "Mist"},
{"6", "Fog"},
{"7", "Cloudy"},
{"8", "Overcast"},
{"9", "Light rain shower"},
{"10", "Light rain shower"},
{"11", "Drizzle"},
{"12", "Light rain"},
{"13", "Heavy rain shower"},
{"14", "Heavy rain shower"},
{"15", "Heavy rain"},
{"16", "Sleet rain shower"},
{"17", "Sleet rain shower"},
{"18", "Sleet"},
{"19", "Hail rain shower"},
{"20", "Hail rain shower"},
{"21", "Hail"},
{"22", "Light snow shower"},
{"23", "Light snow shower"},
{"24", "Light snow"},
{"25", "Heavy snow shower"},
{"26", "Heavy snow shower"},
{"27", "Heavy snow"},
{"28", "Thunder shower"},
{"29", "Thunder shower"},
{"30", "Thunder"}
};

}

<div class="text-center">
    <h1 class="display-4">Weather</h1><br/>

    <form asp-action="Weather" method="get" id="form">
        <div class="row justify-content-around">
            <div class="col-3"></div>
            <div class="col-6 justify-content-around">
                Latitude: 
                <input style="color-scheme:dark" asp-for="Lat" id="Lat" />
                <br/><br/>
                Longitude: 
                <input style="color-scheme:dark" asp-for="Long" id="Long" /> 
            </div>
            <div class="col-3"></div>
    </form>
    <label for="Selection">Select Day</label>
    <select class="form-control" id="Selection" onchange="Changed(event)">
        @foreach (var period in Model.periods)
        {
            <option value="carousel@(period.value)">@period.value</option>
        }
    </select>

    <br>
    @foreach (var period in Model.periods)
    {
        <div id="carousel@(period.value)" class="carousel slide @(period == Model.periods.First() ? "" : "d-none" )">
            <div class="carousel-indicators">
                @for (int i = 0; i < period.Rep.Count(); i++)
                {
                    <button style="background-color: #FFFFFF" type="button" data-bs-target="#carousel@(period.value)"
                        data-bs-slide-to="@i" @if (i == 0)
                    {
                        <text>class="active" aria-current="true</text>
                    } aria-label="Slide
                    @i"></button>
                }
            </div>
            <div class="carousel-inner pb-5">

                @foreach (var rep in period.Rep)
                {
                    switch (rep.W)
                    {
                        case "NA":
                            weatherIcon = "/images/unknown.png";
							weatherBackground = "#666666";
                            break;
                        case "-1":
                            weatherIcon = "/images/drizzle.png";
							weatherBackground = "#666666";
                            break;
                        case "0":
                            weatherIcon = "/images/clear-night.png";
							weatherBackground = "#090970";
                            break;
                        case "1":
                            weatherIcon = "/images/clear.png";
							weatherBackground = "#4040E0";
                            break;
                        case "2":
                            weatherIcon = "/images/partly-cloudy-night.png";
							weatherBackground = "#090970";
                            break;
                        case "3":
                            weatherIcon = "/images/partly-cloudy.png";
							weatherBackground = "#4040E0";
                            break;
                        case "5":
                            weatherIcon = "/images/fog.png";
							weatherBackground = "#666666";
                            break;
                        case "6":
                            weatherIcon = "/images/fog.png";
							weatherBackground = "#666666";
                            break;
                        case "7":
                            weatherIcon = "/images/cloudy.png";
							weatherBackground = "#666666";
                            break;
                        case "8":
                            weatherIcon = "/images/cloudy.png";
							weatherBackground = "#666666";
                            break;
                        case "9":
                            weatherIcon = "/images/drizzle.png";
							weatherBackground = "#090970";
                            break;
                        case "10":
                            weatherIcon = "/images/drizzle.png";
							weatherBackground = "#4040E0";
                            break;
                        case "11":
                            weatherIcon = "/images/drizzle.png";
							weatherBackground = "#666666";
                            break;
                        case "12":
                            weatherIcon = "/images/rain.png";
							weatherBackground = "#666666";
                            break;
                        case "13":
                            weatherIcon = "/images/showers.png";
							weatherBackground = "#090970";
                            break;
                        case "14":
                            weatherIcon = "/images/showers.png";
							weatherBackground = "#4040E0";
                            break;
                        case "15":
                            weatherIcon = "/images/heavy-rain.png";
							weatherBackground = "#666666";
                            break;
                        case "16":
                            weatherIcon = "/images/heavy-rain.png";
							weatherBackground = "#090970";
                            break;
                        case "17":
                            weatherIcon = "/images/heavy-rain.png";
							weatherBackground = "#4040E0";
                            break;
                        case "18":
                            weatherIcon = "/images/snow.png";
							weatherBackground = "#666666";
                            break;
                        case "19":
                            weatherIcon = "/images/hail.png";
							weatherBackground = "#090970";
                            break;
                        case "20":
                            weatherIcon = "/images/hail.png";
							weatherBackground = "#4040E0";
                            break;
                        case "21":
                            weatherIcon = "/images/hail.png";
							weatherBackground = "#666666";
                            break;
                        case "22":
                            weatherIcon = "/images/snow-shower.png";
							weatherBackground = "#090970";
                            break;
                        case "23":
                            weatherIcon = "/images/snow-shower.png";
							weatherBackground = "#4040E0";
                            break;
                        case "24":
                            weatherIcon = "/images/snow.png";
							weatherBackground = "#666666";
                            break;
                        case "25":
                            weatherIcon = "/images/snow.png";
							weatherBackground = "#090970";
                            break;
                        case "26":
                            weatherIcon = "/images/snow.png";
							weatherBackground = "#4040E0";
                            break;
                        case "27":
                            weatherIcon = "/images/snow.png";
							weatherBackground = "#666666";
                            break;
                        case "28":
                            weatherIcon = "/images/thunder-night.png";
							weatherBackground = "#090970";
                            break;
                        case "29":
                            weatherIcon = "/images/thunder-day.png";
							weatherBackground = "#4040E0";
                            break;
                        case "30":
                            weatherIcon = "/images/thunder.png";
							weatherBackground = "#666666";
                            break;
                        default:
                            weatherIcon = "/images/unknown.png";
							weatherBackground = "#666666";
                            break;
                    }
                    switch (rep.D)
                    {
                        case "N":
                            rotation = 0;
                            break;
                        case "NNE":
                            rotation = 22.5;
                            break;
                        case "NE":
                            rotation = 45;
                            break;
                        case "ENE":
                            rotation = 90 - 22.5;
                            break;
                        case "E":
                            rotation = 90;
                            break;
                        case "ESE":
                            rotation = 90 + 22.5;
                            break;
                        case "SE":
                            rotation = 135;
                            break;
                        case "SSE":
                            rotation = 180 - 22.5;
                            break;
                        case "S":
                            rotation = 180;
                            break;
                        case "SSW":
                            rotation = 180 + 22.5;
                            break;
                        case "SW":
                            rotation = 225;
                            break;
                        case "WSW":
                            rotation = 270 - 22.5;
                            break;
                        case "W":
                            rotation = 270;
                            break;
                        case "WNW":
                            rotation = 270 + 22.5;
                            break;
                        case "NW":
                            rotation = 315;
                            break;
                        case "NNW":
                            rotation = 360 - 22.5;
                            break;
                    }
                    <div class="carousel-item@(rep == period.Rep.First() ? " active" : "" )">
                        <div class="card border-0">
                            <div
                                style="width: 100%; height: 100%; flex-direction: column; justify-content: flex-start; align-items: center; display: inline-flex">

                                <div
                                    style="width: 352px; height: 183px; background: @weatherBackground ; box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25); border-radius: 29px">
                                    <div class="row">
                                        <div
                                            style=" width: 200px height: 25px; color: black; font-size: 20px;  font-weight: 700; word-wrap: break-word">
                                            @Model.location
                                        </div>
                                    </div>
                                    <div class="row justify-content-between">
                                        <div class="col ms-2">
                                            <div style="width: 92px; height: 51px; color: black; font-size: 40px;  font-weight: 700; word-wrap: break-word">
                                                @rep.T</div>
                                        </div>
                                        <div class="col" style="height: 25px; color: black; font-size: 12px;  font-weight: 700; word-wrap: break-word">
                                            @Weather[rep.W]
                                        </div>
                                        <div class="col">
                                            <img style="width: 64px; height: 64px" src="@weatherIcon" />
                                        </div>
                                    </div>
                                    <div class="row justify-content-between">
                                        <div class="col ps-3 pe-0">
                                            <div
                                                style="width: 135px; height: 53px; color: black; font-size: 12px;  font-weight: 700; word-wrap: break-word">
                                                Feels Like: @rep.F<br />Chance of Rain: @rep.Pp<br />Humidity:
                                                @rep.H<br />Visibility:
                                                @rep.V<br /></div>
                                        </div>
                                        <div class="col ps-0 pe-0">
                                            <div
                                                style="width: 86px; height: 53px; color: black; font-size: 12px;  font-weight: 700; word-wrap: break-word">
                                                Wind: @rep.S<br />Gust: @rep.G<br />UV: @rep.U</div>
                                        </div>
                                        <div class="col ps-5 pe-0">
                                            <div class="row mt-0 pt-0">
                                                <img class="p-0 ms-2"
                                                    style="width: 48px; height: 48px; transform: rotate(@((rotation + 180).ToString()+"deg"))"
                                                    src="~/images/arrow.png" />
                                            </div>
                                            <div class="row px-0 mt-2">
                                                <div class="px-0"
                                                    style="width: 64px; height: 16px; text-align: center; color: black; font-size: 12px;  font-weight: 700; word-wrap: break-word">
                                                    @rep.D</div>
                                            </div>

                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="">
                                <h4>@rep.time</h4>
                            </div>
                        </div>
                    </div>

                }

                <button style="background-color: #FFFFFF; width: 48px" class="carousel-control-prev" type="button"
                    data-bs-target="#carousel@(period.value)" data-bs-slide="prev">
                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Previous</span>
                </button>
                <button style="background-color: #FFFFFF; width: 48px" class="carousel-control-next" type="button"
                    data-bs-target="#carousel@(period.value)" data-bs-slide="next">
                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Next</span>
                </button>
            </div>
        </div>
    }


    @* @foreach (var period in Model.periods)
    {
    @Html.DisplayFor(item => period.value)
    <table class="table">
    <thead class="thead-dark">
    <th>Time</th>
    <th>Weather Type</th>
    <th>Chance of Rain</th>
    <th>Feels Like</th>
    <th>Temperature</th>
    <th>Humidity</th>
    <th>Visibility</th>
    <th>Wind Direction</th>
    <th>Wind Speed</th>
    <th>Wind Gust</th>
    <th>UV Index</th>
    </thead>
    <tbody>

    @foreach (var rep in period.Rep)
    {
    <tr>
    <td>@rep.time</td>
    <td>@rep.W</td>
    <td>@rep.Pp</td>
    <td>@rep.F</td>
    <td>@rep.T</td>
    <td>@rep.H</td>
    <td>@rep.V</td>
    <td>@rep.D</td>
    <td>@rep.S</td>
    <td>@rep.G</td>
    <td>@rep.U</td>

    </tr>
    }
    </tbody>

    </table>
    } *@



</div>

<script>
    let selected = document.getElementById('carousel@(Model.periods.First().value)');

    const Changed = ({ target }) => {
        // Check if there's a selected element and hide it
        if (selected && selected !== target.value)
        {
            selected.classList.add("d-none")
        }
        // Set selected to latest element
        selected = document.getElementById(target.value);
        // remove 'hidden' class from selected
        selected.classList.remove("d-none")
    }
</script>